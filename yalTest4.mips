.data
finLigne:     .asciiz "\n"
              .align 2
divZero:      .asciiz "Erreur :\n\t division par zero"
vrai:         .asciiz "vrai"
faux:         .asciiz "faux"

.text
main :
#numéro de région
li $t8, 0
sw $t8, 0($sp)
addi $sp, $sp, -4

#intialiser $s7 avec $sp
move $s7, $sp

#réserver la place pour 11 variables
addi $sp, $sp, -44

# initialisation de toutes les variables a 0
sw $zero, -0($s7)
sw $zero, -4($s7)
sw $zero, -8($s7)
sw $zero, -12($s7)
sw $zero, -16($s7)
sw $zero, -20($s7)
sw $zero, -24($s7)
sw $zero, -28($s7)
sw $zero, -32($s7)
sw $zero, -36($s7)
sw $zero, -40($s7)

#lecture
#appel de la lecture
li $v0, 5
syscall
#on empile la valeur qu'on veut mettre dans la variable
sw $v0, 0($sp)
add $sp, $sp, -4
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#tantque
tantquelecture_2 :
#on prend le numéro de région courant
lw $v0, 4($t5) 
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquelecture_2
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquelecture_2
#sortie du tantque
fintantquelecture_2 :

#on dépile la valeur qu'on a lu
add $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, -4($t5)

#lecture
#appel de la lecture
li $v0, 5
syscall
#on empile la valeur qu'on veut mettre dans la variable
sw $v0, 0($sp)
add $sp, $sp, -4
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#tantque
tantquelecture_3 :
#on prend le numéro de région courant
lw $v0, 4($t5) 
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquelecture_3
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquelecture_3
#sortie du tantque
fintantquelecture_3 :

#on dépile la valeur qu'on a lu
add $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, -8($t5)

# affichage de l'expression (entier)
#mise en place des paramètres 
add $sp, $sp, -4

# constante dans $v0
li $v0, 191
sw $v0, 0($sp)
#Appel de fonction
#Allocation pour la valeur retournée
add $sp, $sp, -4

#Jump vers le label de la fonction lastboss
jal fonction4

#Depile dans $v0
add $sp, $sp, 4
lw $v0, 0($sp)

#Dépiler les params
add $sp, $sp, 4

move $a0, $v0
li $v0, 1
syscall
li $v0, 4      # retour à la ligne
la $a0, finLigne
syscall


# affichage de l'expression (entier)
#mise en place des paramètres 
add $sp, $sp, -0

#Appel de fonction
#Allocation pour la valeur retournée
add $sp, $sp, -4

#Jump vers le label de la fonction yal2
jal fonction5

#Depile dans $v0
add $sp, $sp, 4
lw $v0, 0($sp)

#Dépiler les params
add $sp, $sp, 0

move $a0, $v0
li $v0, 1
syscall
li $v0, 4      # retour à la ligne
la $a0, finLigne
syscall


end :
    li $v0, 10            # retour au système
    syscall

#Fonction
fonction0:
#Empile l'adresse de retour
sw $ra, 0($sp)
add $sp, $sp, -4

#Empilement chainage dynamique
sw $s7, 0($sp)
add $sp, $sp, -4

#Empilement de l'id de la region
li $t8, 1
sw $t8, 0($sp)
add $sp, $sp, -4

#Deplacement de la base
move $s7, $sp

#Allocation des variables 
add $sp, $sp , -4
#Instruction dans la fonction
#affectation
# constante dans $v0
li $v0, 6
#on empile la valeur qu'on veut mettre dans la variable
sw $v0, 0($sp)
add $sp, $sp, -4
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 1
#début tantque
tantqueaffect_0 :
#on prend le numéro de région courant
lw $v0, 4($t5) 
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantqueaffect_0
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantqueaffect_0
#sortie du tantque
fintantqueaffect_0 :

#on dépile la valeur qu'on veut mettre dans la variable
add $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, 0($t5)

#affectation
# constante dans $v0
li $v0, 7
#on empile la valeur qu'on veut mettre dans la variable
sw $v0, 0($sp)
add $sp, $sp, -4
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début tantque
tantqueaffect_1 :
#on prend le numéro de région courant
lw $v0, 4($t5) 
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantqueaffect_1
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantqueaffect_1
#sortie du tantque
fintantqueaffect_1 :

#on dépile la valeur qu'on veut mettre dans la variable
add $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, -12($t5)

#Retour de fonction
#Met exp dans $v0
# Addition 
#partie gauche
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 1
#début du tantque
tantquevariable_0 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_0
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_0
#sortie du tantque
fintantquevariable_0 :

#chargement classique dans $v0
lw $v0, 0($t5)

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
# Multiplication 
#partie gauche
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_1 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_1
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_1
#sortie du tantque
fintantquevariable_1 :

#chargement classique dans $v0
lw $v0, -12($t5)

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_2 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_2
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_2
#sortie du tantque
fintantquevariable_2 :

#chargement classique dans $v0
lw $v0, -4($t5)

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Multiplication de $v0 et $t8
mult $v0, $t8
#Res $lo -> $v0
mflo $v0

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Addition de $v0 et $t8
add $v0, $t8, $v0

#retire de la pile les variables
move $sp, $s7
lw $s7, 8($sp)
#Depile l'id de la region & le chainage dynamique & l'adresse de retour 
add $sp, $sp, 12
lw $ra, 0($sp)

#Sauvegarde la valeur calculé dans $v0
sw $v0, 4($sp)

#Jump vers le bloc precedent
jr $ra




#Fonction
fonction1:
#Empile l'adresse de retour
sw $ra, 0($sp)
add $sp, $sp, -4

#Empilement chainage dynamique
sw $s7, 0($sp)
add $sp, $sp, -4

#Empilement de l'id de la region
li $t8, 2
sw $t8, 0($sp)
add $sp, $sp, -4

#Deplacement de la base
move $s7, $sp

#Allocation des variables 
add $sp, $sp , -4
#Instruction dans la fonction
#affectation
# constante dans $v0
li $v0, 15
#on empile la valeur qu'on veut mettre dans la variable
sw $v0, 0($sp)
add $sp, $sp, -4
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 2
#début tantque
tantqueaffect_2 :
#on prend le numéro de région courant
lw $v0, 4($t5) 
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantqueaffect_2
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantqueaffect_2
#sortie du tantque
fintantqueaffect_2 :

#on dépile la valeur qu'on veut mettre dans la variable
add $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, 0($t5)

#affectation
# constante dans $v0
li $v0, 3
#on empile la valeur qu'on veut mettre dans la variable
sw $v0, 0($sp)
add $sp, $sp, -4
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début tantque
tantqueaffect_3 :
#on prend le numéro de région courant
lw $v0, 4($t5) 
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantqueaffect_3
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantqueaffect_3
#sortie du tantque
fintantqueaffect_3 :

#on dépile la valeur qu'on veut mettre dans la variable
add $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, -20($t5)

#affectation
# Addition 
#partie gauche
# Addition 
#partie gauche
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 2
#début du tantque
tantquevariable_3 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_3
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_3
#sortie du tantque
fintantquevariable_3 :

#chargement classique dans $v0
lw $v0, 0($t5)

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_4 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_4
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_4
#sortie du tantque
fintantquevariable_4 :

#chargement classique dans $v0
lw $v0, -20($t5)

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Addition de $v0 et $t8
add $v0, $t8, $v0

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_5 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_5
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_5
#sortie du tantque
fintantquevariable_5 :

#chargement classique dans $v0
lw $v0, -8($t5)

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Addition de $v0 et $t8
add $v0, $t8, $v0
#on empile la valeur qu'on veut mettre dans la variable
sw $v0, 0($sp)
add $sp, $sp, -4
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début tantque
tantqueaffect_4 :
#on prend le numéro de région courant
lw $v0, 4($t5) 
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantqueaffect_4
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantqueaffect_4
#sortie du tantque
fintantqueaffect_4 :

#on dépile la valeur qu'on veut mettre dans la variable
add $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, -24($t5)

#Retour de fonction
#Met exp dans $v0
# Multiplication 
#partie gauche
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_6 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_6
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_6
#sortie du tantque
fintantquevariable_6 :

#chargement classique dans $v0
lw $v0, -24($t5)

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
#mise en place des paramètres 
add $sp, $sp, -0

#Appel de fonction
#Allocation pour la valeur retournée
add $sp, $sp, -4

#Jump vers le label de la fonction ayayaClap
jal fonction0

#Depile dans $v0
add $sp, $sp, 4
lw $v0, 0($sp)

#Dépiler les params
add $sp, $sp, 0


#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Multiplication de $v0 et $t8
mult $v0, $t8
#Res $lo -> $v0
mflo $v0

#retire de la pile les variables
move $sp, $s7
lw $s7, 8($sp)
#Depile l'id de la region & le chainage dynamique & l'adresse de retour 
add $sp, $sp, 12
lw $ra, 0($sp)

#Sauvegarde la valeur calculé dans $v0
sw $v0, 4($sp)

#Jump vers le bloc precedent
jr $ra




#Fonction
fonction2:
#Empile l'adresse de retour
sw $ra, 0($sp)
add $sp, $sp, -4

#Empilement chainage dynamique
sw $s7, 0($sp)
add $sp, $sp, -4

#Empilement de l'id de la region
li $t8, 3
sw $t8, 0($sp)
add $sp, $sp, -4

#Deplacement de la base
move $s7, $sp

#Allocation des variables 
add $sp, $sp , -0
#Instruction dans la fonction
#affectation
# Division 
#partie gauche
# Multiplication 
#partie gauche
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 3
#début du tantque
tantquevariable_7 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_7
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_7
#sortie du tantque
fintantquevariable_7 :

#chargement classique dans $v0
lw $v0, 20($t5)

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
# constante dans $v0
li $v0, 3

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Multiplication de $v0 et $t8
mult $v0, $t8
#Res $lo -> $v0
mflo $v0

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 3
#début du tantque
tantquevariable_8 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_8
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_8
#sortie du tantque
fintantquevariable_8 :

#chargement classique dans $v0
lw $v0, 20($t5)

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Division de $v0 et $t8
# la division par 0
beqz $v0, alors_div_0
div $v0, $t8, $v0
j fin_div_0
alors_div_0 :
#l'expression droite est egale a 0
li $v0, 4
la $a0, divZero
syscall
j end
fin_div_0 :
#on empile la valeur qu'on veut mettre dans la variable
sw $v0, 0($sp)
add $sp, $sp, -4
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 3
#début tantque
tantqueaffect_5 :
#on prend le numéro de région courant
lw $v0, 4($t5) 
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantqueaffect_5
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantqueaffect_5
#sortie du tantque
fintantqueaffect_5 :

#on dépile la valeur qu'on veut mettre dans la variable
add $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, 20($t5)

#affectation
# Addition 
#partie gauche
# Division 
#partie gauche
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 3
#début du tantque
tantquevariable_9 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_9
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_9
#sortie du tantque
fintantquevariable_9 :

#chargement classique dans $v0
lw $v0, 16($t5)

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
# constante dans $v0
li $v0, 191

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Division de $v0 et $t8
# la division par 0
beqz $v0, alors_div_1
div $v0, $t8, $v0
j fin_div_1
alors_div_1 :
#l'expression droite est egale a 0
li $v0, 4
la $a0, divZero
syscall
j end
fin_div_1 :

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 3
#début du tantque
tantquevariable_10 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_10
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_10
#sortie du tantque
fintantquevariable_10 :

#chargement classique dans $v0
lw $v0, 20($t5)

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Addition de $v0 et $t8
add $v0, $t8, $v0
#on empile la valeur qu'on veut mettre dans la variable
sw $v0, 0($sp)
add $sp, $sp, -4
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début tantque
tantqueaffect_6 :
#on prend le numéro de région courant
lw $v0, 4($t5) 
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantqueaffect_6
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantqueaffect_6
#sortie du tantque
fintantqueaffect_6 :

#on dépile la valeur qu'on veut mettre dans la variable
add $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, -36($t5)

#Retour de fonction
#Met exp dans $v0
# Addition 
#partie gauche
#mise en place des paramètres 
add $sp, $sp, -0

#Appel de fonction
#Allocation pour la valeur retournée
add $sp, $sp, -4

#Jump vers le label de la fonction testImbrication
jal fonction3

#Depile dans $v0
add $sp, $sp, 4
lw $v0, 0($sp)

#Dépiler les params
add $sp, $sp, 0


#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_11 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_11
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_11
#sortie du tantque
fintantquevariable_11 :

#chargement classique dans $v0
lw $v0, -36($t5)

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Addition de $v0 et $t8
add $v0, $t8, $v0

#retire de la pile les variables
move $sp, $s7
lw $s7, 8($sp)
#Depile l'id de la region & le chainage dynamique & l'adresse de retour 
add $sp, $sp, 12
lw $ra, 0($sp)

#Sauvegarde la valeur calculé dans $v0
sw $v0, 4($sp)

#Jump vers le bloc precedent
jr $ra




#Fonction
fonction3:
#Empile l'adresse de retour
sw $ra, 0($sp)
add $sp, $sp, -4

#Empilement chainage dynamique
sw $s7, 0($sp)
add $sp, $sp, -4

#Empilement de l'id de la region
li $t8, 4
sw $t8, 0($sp)
add $sp, $sp, -4

#Deplacement de la base
move $s7, $sp

#Allocation des variables 
add $sp, $sp , -0
#Instruction dans la fonction
#Retour de fonction
#Met exp dans $v0
# Multiplication 
#partie gauche
#mise en place des paramètres 
add $sp, $sp, -0

#Appel de fonction
#Allocation pour la valeur retournée
add $sp, $sp, -4

#Jump vers le label de la fonction ayayaClapClap
jal fonction1

#Depile dans $v0
add $sp, $sp, 4
lw $v0, 0($sp)

#Dépiler les params
add $sp, $sp, 0


#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
# constante dans $v0
li $v0, 2

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Multiplication de $v0 et $t8
mult $v0, $t8
#Res $lo -> $v0
mflo $v0

#retire de la pile les variables
move $sp, $s7
lw $s7, 8($sp)
#Depile l'id de la region & le chainage dynamique & l'adresse de retour 
add $sp, $sp, 12
lw $ra, 0($sp)

#Sauvegarde la valeur calculé dans $v0
sw $v0, 4($sp)

#Jump vers le bloc precedent
jr $ra




#Fonction
fonction4:
#Empile l'adresse de retour
sw $ra, 0($sp)
add $sp, $sp, -4

#Empilement chainage dynamique
sw $s7, 0($sp)
add $sp, $sp, -4

#Empilement de l'id de la region
li $t8, 5
sw $t8, 0($sp)
add $sp, $sp, -4

#Deplacement de la base
move $s7, $sp

#Allocation des variables 
add $sp, $sp , -4
#Instruction dans la fonction
#affectation
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 5
#début du tantque
tantquevariable_12 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_12
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_12
#sortie du tantque
fintantquevariable_12 :

#chargement classique dans $v0
lw $v0, 16($t5)
#on empile la valeur qu'on veut mettre dans la variable
sw $v0, 0($sp)
add $sp, $sp, -4
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 5
#début tantque
tantqueaffect_7 :
#on prend le numéro de région courant
lw $v0, 4($t5) 
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantqueaffect_7
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantqueaffect_7
#sortie du tantque
fintantqueaffect_7 :

#on dépile la valeur qu'on veut mettre dans la variable
add $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, 0($t5)

#Retour de fonction
#Met exp dans $v0
# Division 
#partie gauche
#mise en place des paramètres 
add $sp, $sp, -8

#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 5
#début du tantque
tantquevariable_13 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_13
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_13
#sortie du tantque
fintantquevariable_13 :

#chargement classique dans $v0
lw $v0, 0($t5)
sw $v0, 0($sp)
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 5
#début du tantque
tantquevariable_14 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_14
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_14
#sortie du tantque
fintantquevariable_14 :

#chargement classique dans $v0
lw $v0, 16($t5)
sw $v0, 4($sp)
#Appel de fonction
#Allocation pour la valeur retournée
add $sp, $sp, -4

#Jump vers le label de la fonction camarchebien
jal fonction2

#Depile dans $v0
add $sp, $sp, 4
lw $v0, 0($sp)

#Dépiler les params
add $sp, $sp, 8


#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
# constante dans $v0
li $v0, 4

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Division de $v0 et $t8
# la division par 0
beqz $v0, alors_div_2
div $v0, $t8, $v0
j fin_div_2
alors_div_2 :
#l'expression droite est egale a 0
li $v0, 4
la $a0, divZero
syscall
j end
fin_div_2 :

#retire de la pile les variables
move $sp, $s7
lw $s7, 8($sp)
#Depile l'id de la region & le chainage dynamique & l'adresse de retour 
add $sp, $sp, 12
lw $ra, 0($sp)

#Sauvegarde la valeur calculé dans $v0
sw $v0, 4($sp)

#Jump vers le bloc precedent
jr $ra




#Fonction
fonction5:
#Empile l'adresse de retour
sw $ra, 0($sp)
add $sp, $sp, -4

#Empilement chainage dynamique
sw $s7, 0($sp)
add $sp, $sp, -4

#Empilement de l'id de la region
li $t8, 6
sw $t8, 0($sp)
add $sp, $sp, -4

#Deplacement de la base
move $s7, $sp

#Allocation des variables 
add $sp, $sp , -8
#Instruction dans la fonction
#lecture
#appel de la lecture
li $v0, 5
syscall
#on empile la valeur qu'on veut mettre dans la variable
sw $v0, 0($sp)
add $sp, $sp, -4
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 6
#tantque
tantquelecture_0 :
#on prend le numéro de région courant
lw $v0, 4($t5) 
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquelecture_0
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquelecture_0
#sortie du tantque
fintantquelecture_0 :

#on dépile la valeur qu'on a lu
add $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, 0($t5)

#lecture
#appel de la lecture
li $v0, 5
syscall
#on empile la valeur qu'on veut mettre dans la variable
sw $v0, 0($sp)
add $sp, $sp, -4
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 6
#tantque
tantquelecture_1 :
#on prend le numéro de région courant
lw $v0, 4($t5) 
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquelecture_1
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquelecture_1
#sortie du tantque
fintantquelecture_1 :

#on dépile la valeur qu'on a lu
add $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, -4($t5)

#affectation
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 6
#début du tantque
tantquevariable_15 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_15
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_15
#sortie du tantque
fintantquevariable_15 :

#chargement classique dans $v0
lw $v0, 0($t5)
#on empile la valeur qu'on veut mettre dans la variable
sw $v0, 0($sp)
add $sp, $sp, -4
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début tantque
tantqueaffect_8 :
#on prend le numéro de région courant
lw $v0, 4($t5) 
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantqueaffect_8
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantqueaffect_8
#sortie du tantque
fintantqueaffect_8 :

#on dépile la valeur qu'on veut mettre dans la variable
add $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, -4($t5)

#affectation
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 6
#début du tantque
tantquevariable_16 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_16
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_16
#sortie du tantque
fintantquevariable_16 :

#chargement classique dans $v0
lw $v0, -4($t5)
#on empile la valeur qu'on veut mettre dans la variable
sw $v0, 0($sp)
add $sp, $sp, -4
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début tantque
tantqueaffect_9 :
#on prend le numéro de région courant
lw $v0, 4($t5) 
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantqueaffect_9
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantqueaffect_9
#sortie du tantque
fintantqueaffect_9 :

#on dépile la valeur qu'on veut mettre dans la variable
add $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, -8($t5)

#affectation
# constante dans $v0
li $v0, 5
#on empile la valeur qu'on veut mettre dans la variable
sw $v0, 0($sp)
add $sp, $sp, -4
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début tantque
tantqueaffect_10 :
#on prend le numéro de région courant
lw $v0, 4($t5) 
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantqueaffect_10
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantqueaffect_10
#sortie du tantque
fintantqueaffect_10 :

#on dépile la valeur qu'on veut mettre dans la variable
add $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, -12($t5)

#affectation
# constante dans $v0
li $v0, 0
#on empile la valeur qu'on veut mettre dans la variable
sw $v0, 0($sp)
add $sp, $sp, -4
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début tantque
tantqueaffect_11 :
#on prend le numéro de région courant
lw $v0, 4($t5) 
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantqueaffect_11
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantqueaffect_11
#sortie du tantque
fintantqueaffect_11 :

#on dépile la valeur qu'on veut mettre dans la variable
add $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, -28($t5)

#affectation
# constante dans $v0
li $v0, 0
#on empile la valeur qu'on veut mettre dans la variable
sw $v0, 0($sp)
add $sp, $sp, -4
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début tantque
tantqueaffect_12 :
#on prend le numéro de région courant
lw $v0, 4($t5) 
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantqueaffect_12
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantqueaffect_12
#sortie du tantque
fintantqueaffect_12 :

#on dépile la valeur qu'on veut mettre dans la variable
add $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, -32($t5)

#affectation
# Addition 
#partie gauche
# Soustraction 
#partie gauche
# Addition 
#partie gauche
# Addition 
#partie gauche
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_17 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_17
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_17
#sortie du tantque
fintantquevariable_17 :

#chargement classique dans $v0
lw $v0, -12($t5)

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
# Multiplication 
#partie gauche
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_18 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_18
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_18
#sortie du tantque
fintantquevariable_18 :

#chargement classique dans $v0
lw $v0, -4($t5)

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_19 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_19
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_19
#sortie du tantque
fintantquevariable_19 :

#chargement classique dans $v0
lw $v0, -8($t5)

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Multiplication de $v0 et $t8
mult $v0, $t8
#Res $lo -> $v0
mflo $v0

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Addition de $v0 et $t8
add $v0, $t8, $v0

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_20 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_20
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_20
#sortie du tantque
fintantquevariable_20 :

#chargement classique dans $v0
lw $v0, -12($t5)

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Addition de $v0 et $t8
add $v0, $t8, $v0

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
# Multiplication 
#partie gauche
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_21 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_21
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_21
#sortie du tantque
fintantquevariable_21 :

#chargement classique dans $v0
lw $v0, -12($t5)

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
# constante dans $v0
li $v0, 15

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Multiplication de $v0 et $t8
mult $v0, $t8
#Res $lo -> $v0
mflo $v0

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Soustraction de $v0 et $t8
sub $v0, $t8, $v0

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
# Division 
#partie gauche
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_22 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_22
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_22
#sortie du tantque
fintantquevariable_22 :

#chargement classique dans $v0
lw $v0, -12($t5)

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
# constante dans $v0
li $v0, 5

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Division de $v0 et $t8
# la division par 0
beqz $v0, alors_div_3
div $v0, $t8, $v0
j fin_div_3
alors_div_3 :
#l'expression droite est egale a 0
li $v0, 4
la $a0, divZero
syscall
j end
fin_div_3 :

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Addition de $v0 et $t8
add $v0, $t8, $v0
#on empile la valeur qu'on veut mettre dans la variable
sw $v0, 0($sp)
add $sp, $sp, -4
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début tantque
tantqueaffect_13 :
#on prend le numéro de région courant
lw $v0, 4($t5) 
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantqueaffect_13
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantqueaffect_13
#sortie du tantque
fintantqueaffect_13 :

#on dépile la valeur qu'on veut mettre dans la variable
add $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, 0($t5)

# affichage de l'expression (entier)
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_23 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_23
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_23
#sortie du tantque
fintantquevariable_23 :

#chargement classique dans $v0
lw $v0, 0($t5)
move $a0, $v0
li $v0, 1
syscall
li $v0, 4      # retour à la ligne
la $a0, finLigne
syscall


#Boucle
tantque_0 :
# Inférieur 
#partie gauche
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_24 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_24
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_24
#sortie du tantque
fintantquevariable_24 :

#chargement classique dans $v0
lw $v0, 0($t5)

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
# constante dans $v0
li $v0, 0

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Inférieur de $v0 et $t8
#partie gauche est inférieure à la droite, on met 1 dans $v0, sinon 0
slt $v0, $t8, $v0
beqz $v0, finTantque_0
iteration_0 :
#affectation
# Addition 
#partie gauche
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_25 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_25
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_25
#sortie du tantque
fintantquevariable_25 :

#chargement classique dans $v0
lw $v0, 0($t5)

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
# constante dans $v0
li $v0, 1

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Addition de $v0 et $t8
add $v0, $t8, $v0
#on empile la valeur qu'on veut mettre dans la variable
sw $v0, 0($sp)
add $sp, $sp, -4
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début tantque
tantqueaffect_14 :
#on prend le numéro de région courant
lw $v0, 4($t5) 
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantqueaffect_14
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantqueaffect_14
#sortie du tantque
fintantqueaffect_14 :

#on dépile la valeur qu'on veut mettre dans la variable
add $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, 0($t5)

#affectation
# Addition 
#partie gauche
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_26 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_26
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_26
#sortie du tantque
fintantquevariable_26 :

#chargement classique dans $v0
lw $v0, -32($t5)

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
# constante dans $v0
li $v0, 1

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Addition de $v0 et $t8
add $v0, $t8, $v0
#on empile la valeur qu'on veut mettre dans la variable
sw $v0, 0($sp)
add $sp, $sp, -4
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début tantque
tantqueaffect_15 :
#on prend le numéro de région courant
lw $v0, 4($t5) 
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantqueaffect_15
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantqueaffect_15
#sortie du tantque
fintantqueaffect_15 :

#on dépile la valeur qu'on veut mettre dans la variable
add $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, -32($t5)

j tantque_0
finTantque_0 :

# affichage de l'expression (entier)
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_27 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_27
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_27
#sortie du tantque
fintantquevariable_27 :

#chargement classique dans $v0
lw $v0, -32($t5)
move $a0, $v0
li $v0, 1
syscall
li $v0, 4      # retour à la ligne
la $a0, finLigne
syscall


#Condition
 si_0 :
# Inférieur 
#partie gauche
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_28 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_28
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_28
#sortie du tantque
fintantquevariable_28 :

#chargement classique dans $v0
lw $v0, 0($t5)

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
# constante dans $v0
li $v0, 0

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Inférieur de $v0 et $t8
#partie gauche est inférieure à la droite, on met 1 dans $v0, sinon 0
slt $v0, $t8, $v0
beqz $v0,sinon_0
 alors_0 :
# affichage de l'expression (entier)
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_29 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_29
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_29
#sortie du tantque
fintantquevariable_29 :

#chargement classique dans $v0
lw $v0, 0($t5)
move $a0, $v0
li $v0, 1
syscall
li $v0, 4      # retour à la ligne
la $a0, finLigne
syscall


j fin_0
sinon_0 :
# affichage de l'expression (entier)
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_30 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_30
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_30
#sortie du tantque
fintantquevariable_30 :

#chargement classique dans $v0
lw $v0, -4($t5)
move $a0, $v0
li $v0, 1
syscall
li $v0, 4      # retour à la ligne
la $a0, finLigne
syscall


fin_0 :

#affectation
# constante dans $v0
li $v0, 0
#on empile la valeur qu'on veut mettre dans la variable
sw $v0, 0($sp)
add $sp, $sp, -4
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début tantque
tantqueaffect_16 :
#on prend le numéro de région courant
lw $v0, 4($t5) 
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantqueaffect_16
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantqueaffect_16
#sortie du tantque
fintantqueaffect_16 :

#on dépile la valeur qu'on veut mettre dans la variable
add $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, 0($t5)

#affectation
# constante dans $v0
li $v0, 0
#on empile la valeur qu'on veut mettre dans la variable
sw $v0, 0($sp)
add $sp, $sp, -4
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début tantque
tantqueaffect_17 :
#on prend le numéro de région courant
lw $v0, 4($t5) 
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantqueaffect_17
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantqueaffect_17
#sortie du tantque
fintantqueaffect_17 :

#on dépile la valeur qu'on veut mettre dans la variable
add $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, -4($t5)

# affichage de l'expression (booleen)
# Egalite 
#partie gauche
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_31 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_31
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_31
#sortie du tantque
fintantquevariable_31 :

#chargement classique dans $v0
lw $v0, 0($t5)

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
# constante dans $v0
li $v0, 0

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Egalite de $v0 et $t8
#egalité -> on met 1 dans $v0, sinon 0
seq $v0, $v0, $t8
beqz $v0, alors_affbool_4
la $a0, vrai 
j fin_affbool_4
alors_affbool_4 :
la $a0, faux 
fin_affbool_4 :
li $v0, 4
syscall
li $v0, 4      # retour à la ligne
la $a0, finLigne
syscall


#Boucle
tantque_2 :
# Inférieur 
#partie gauche
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_32 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_32
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_32
#sortie du tantque
fintantquevariable_32 :

#chargement classique dans $v0
lw $v0, 0($t5)

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
# constante dans $v0
li $v0, 10

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Inférieur de $v0 et $t8
#partie gauche est inférieure à la droite, on met 1 dans $v0, sinon 0
slt $v0, $t8, $v0
beqz $v0, finTantque_2
iteration_2 :
#Boucle
tantque_1 :
# Inférieur 
#partie gauche
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_33 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_33
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_33
#sortie du tantque
fintantquevariable_33 :

#chargement classique dans $v0
lw $v0, -4($t5)

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
# constante dans $v0
li $v0, 10

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Inférieur de $v0 et $t8
#partie gauche est inférieure à la droite, on met 1 dans $v0, sinon 0
slt $v0, $t8, $v0
beqz $v0, finTantque_1
iteration_1 :
#affectation
# Addition 
#partie gauche
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_34 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_34
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_34
#sortie du tantque
fintantquevariable_34 :

#chargement classique dans $v0
lw $v0, -28($t5)

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
# constante dans $v0
li $v0, 1

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Addition de $v0 et $t8
add $v0, $t8, $v0
#on empile la valeur qu'on veut mettre dans la variable
sw $v0, 0($sp)
add $sp, $sp, -4
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début tantque
tantqueaffect_18 :
#on prend le numéro de région courant
lw $v0, 4($t5) 
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantqueaffect_18
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantqueaffect_18
#sortie du tantque
fintantqueaffect_18 :

#on dépile la valeur qu'on veut mettre dans la variable
add $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, -28($t5)

#affectation
# Addition 
#partie gauche
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_35 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_35
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_35
#sortie du tantque
fintantquevariable_35 :

#chargement classique dans $v0
lw $v0, -4($t5)

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
# constante dans $v0
li $v0, 1

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Addition de $v0 et $t8
add $v0, $t8, $v0
#on empile la valeur qu'on veut mettre dans la variable
sw $v0, 0($sp)
add $sp, $sp, -4
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début tantque
tantqueaffect_19 :
#on prend le numéro de région courant
lw $v0, 4($t5) 
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantqueaffect_19
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantqueaffect_19
#sortie du tantque
fintantqueaffect_19 :

#on dépile la valeur qu'on veut mettre dans la variable
add $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, -4($t5)

j tantque_1
finTantque_1 :

#affectation
# constante dans $v0
li $v0, 0
#on empile la valeur qu'on veut mettre dans la variable
sw $v0, 0($sp)
add $sp, $sp, -4
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début tantque
tantqueaffect_20 :
#on prend le numéro de région courant
lw $v0, 4($t5) 
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantqueaffect_20
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantqueaffect_20
#sortie du tantque
fintantqueaffect_20 :

#on dépile la valeur qu'on veut mettre dans la variable
add $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, -4($t5)

#affectation
# Addition 
#partie gauche
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_36 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_36
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_36
#sortie du tantque
fintantquevariable_36 :

#chargement classique dans $v0
lw $v0, 0($t5)

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
# constante dans $v0
li $v0, 1

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Addition de $v0 et $t8
add $v0, $t8, $v0
#on empile la valeur qu'on veut mettre dans la variable
sw $v0, 0($sp)
add $sp, $sp, -4
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début tantque
tantqueaffect_21 :
#on prend le numéro de région courant
lw $v0, 4($t5) 
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantqueaffect_21
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantqueaffect_21
#sortie du tantque
fintantqueaffect_21 :

#on dépile la valeur qu'on veut mettre dans la variable
add $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, 0($t5)

j tantque_2
finTantque_2 :

#Condition
 si_1 :
# Ou 
#partie gauche
# Egalite 
#partie gauche
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_37 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_37
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_37
#sortie du tantque
fintantquevariable_37 :

#chargement classique dans $v0
lw $v0, -28($t5)

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
# constante dans $v0
li $v0, 100

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Egalite de $v0 et $t8
#egalité -> on met 1 dans $v0, sinon 0
seq $v0, $v0, $t8

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
# Egalite 
#partie gauche
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_38 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_38
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_38
#sortie du tantque
fintantquevariable_38 :

#chargement classique dans $v0
lw $v0, -4($t5)

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
# constante dans $v0
li $v0, 0

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Egalite de $v0 et $t8
#egalité -> on met 1 dans $v0, sinon 0
seq $v0, $v0, $t8

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Ou de $v0 et $t8
or $v0, $t8, $v0
beqz $v0,sinon_1
 alors_1 :
# affichage de l'expression (entier)
# constante dans $v0
li $v0, 5
move $a0, $v0
li $v0, 1
syscall
li $v0, 4      # retour à la ligne
la $a0, finLigne
syscall


j fin_1
sinon_1 :
# affichage de l'expression (booleen)
# Egalite 
#partie gauche
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_39 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_39
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_39
#sortie du tantque
fintantquevariable_39 :

#chargement classique dans $v0
lw $v0, -4($t5)

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
# constante dans $v0
li $v0, 0

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Egalite de $v0 et $t8
#egalité -> on met 1 dans $v0, sinon 0
seq $v0, $v0, $t8
beqz $v0, alors_affbool_6
la $a0, vrai 
j fin_affbool_6
alors_affbool_6 :
la $a0, faux 
fin_affbool_6 :
li $v0, 4
syscall
li $v0, 4      # retour à la ligne
la $a0, finLigne
syscall


fin_1 :

#Condition
 si_2 :
#non yal.arbre.expressions.binaire.comparaison.Egalite@511d50c0
# Calcul de l'expression
# Egalite 
#partie gauche
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_40 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_40
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_40
#sortie du tantque
fintantquevariable_40 :

#chargement classique dans $v0
lw $v0, -28($t5)

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
# constante dans $v0
li $v0, 50

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Egalite de $v0 et $t8
#egalité -> on met 1 dans $v0, sinon 0
seq $v0, $v0, $t8
# XOR $v0 et 1 
xori $v0, $v0, 1
beqz $v0,sinon_2
 alors_2 :
# affichage de l'expression (booleen)
#non yal.arbre.expressions.binaire.comparaison.Different@60e53b93
# Calcul de l'expression
# Différent 
#partie gauche
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_41 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_41
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_41
#sortie du tantque
fintantquevariable_41 :

#chargement classique dans $v0
lw $v0, -4($t5)

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
# constante dans $v0
li $v0, 0

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Différent de $v0 et $t8
#différent -> on met 1 dans $v0, sinon 0
sne $v0, $v0, $t8
# XOR $v0 et 1 
xori $v0, $v0, 1
beqz $v0, alors_affbool_7
la $a0, vrai 
j fin_affbool_7
alors_affbool_7 :
la $a0, faux 
fin_affbool_7 :
li $v0, 4
syscall
li $v0, 4      # retour à la ligne
la $a0, finLigne
syscall


j fin_2
sinon_2 :
# affichage de l'expression (booleen)
# Différent 
#partie gauche
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_42 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_42
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_42
#sortie du tantque
fintantquevariable_42 :

#chargement classique dans $v0
lw $v0, -4($t5)

#mise dans la pile de la partie gauche
 sw $v0, 0($sp)
add $sp, $sp, -4
#partie droite 
# constante dans $v0
li $v0, 0

#depilage de la partie gauche 
add $sp, $sp, 4
lw $t8, 0($sp)
# Différent de $v0 et $t8
#différent -> on met 1 dans $v0, sinon 0
sne $v0, $v0, $t8
beqz $v0, alors_affbool_8
la $a0, vrai 
j fin_affbool_8
alors_affbool_8 :
la $a0, faux 
fin_affbool_8 :
li $v0, 4
syscall
li $v0, 4      # retour à la ligne
la $a0, finLigne
syscall


fin_2 :

#Retour de fonction
#Met exp dans $v0
#positionnement d'une variable dans v0
#On recupere la base
move $t5, $s7
#on récupere le numéro de région de la variable
li $v1, 0
#début du tantque
tantquevariable_43 :
#on prend le numéro de région courant
lw $v0, 4($t5)
sub $v0, $v0, $v1
#on va a la fin si les numéros correspondent
beqz $v0, fintantquevariable_43
#on essaye avec le numéro de région précédent sinon
lw $t5, 8($t5) 
j tantquevariable_43
#sortie du tantque
fintantquevariable_43 :

#chargement classique dans $v0
lw $v0, -28($t5)

#retire de la pile les variables
move $sp, $s7
lw $s7, 8($sp)
#Depile l'id de la region & le chainage dynamique & l'adresse de retour 
add $sp, $sp, 12
lw $ra, 0($sp)

#Sauvegarde la valeur calculé dans $v0
sw $v0, 4($sp)

#Jump vers le bloc precedent
jr $ra





