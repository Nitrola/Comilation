.data
finLigne:     .asciiz "\n"
              .align 2
divZero:      .asciiz "Erreur :\n\t division par zero"
vrai:         .asciiz "vrai"
faux:         .asciiz "faux"

.text
main :
#intialiser $s7 avec $sp
move $s7, $sp

#réserver la place pour 3 variables
addi $sp, $sp, -12

# initialisation de toutes les variables a 0
sw $zero, -0($s7)
sw $zero, -4($s7)
sw $zero, -8($s7)

# Lecture d'un entier
li $v0, 5
syscall
#affecte a la variable, la valeur entiere lue
sw $v0, -4($s7)

# Lecture d'un entier
li $v0, 5
syscall
#affecte a la variable, la valeur entiere lue
sw $v0, -8($s7)

#affectation d'une variable 
# Multiplication 
# Calcul de la partie gauche
lw $v0, -4($s7)

# Empilement de la partie gauche
sw $v0, 0($sp)
add $sp, $sp, -4

# Calcul de la partie droite
lw $v0, -8($s7)

# Dépilement de la partie gauche
add $sp, $sp, 4
lw $t8, 0($sp)

# Multiplication entre $v0 et $t8
mult $v0, $t8
#Res $lo -> $v0
mflo $v0
sw $v0, 0($s7)

# affichage de l'expression (entier)
# On met la constante dans $v0
li $v0, 3
move $a0, $v0
li $v0, 1
syscall
li $v0, 4      # retour à la ligne
la $a0, finLigne
syscall

end :
    li $v0, 10            # retour au système
    syscall

